朴素解法：
public class Solution {
    public boolean hasCycle(ListNode head) {
    	HashSet<ListNode> nodes=new HashSet<ListNode>();
    	for(ListNode node=head;node!=null;node=node.next){
    		if(!nodes.add(node))
    			return true;
    	}
    	return false;        
    }
}
Two Pointer解法：
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* p1=head;  
        ListNode* p2=head;  
        while(p1 && p2 && p2->next) {  
            p1 = p1->next;  
            p2 = p2->next->next;  
            if(p1 == p2)  
                return true;  
        }  
        return false;  
    }
};
